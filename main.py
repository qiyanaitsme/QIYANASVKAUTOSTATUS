import vk_api
import time
from datetime import datetime

def vk_auth(token):
    try:
        vk_session = vk_api.VkApi(token=token)
        return vk_session.get_api()
    except vk_api.AuthError as error_msg:
        print(error_msg)
        return None

def get_avatar_likes(vk):
    try:
        user_id = vk.users.get()[0]['id']
        photos = vk.photos.get(owner_id=user_id, album_id='profile', rev=1, count=1)
        if photos['items']:
            photo_id = photos['items'][0]['id']
            likes = vk.likes.getList(type='photo', owner_id=user_id, item_id=photo_id)
            return likes['count']
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª–∞–π–∫–æ–≤ –∞–≤–∞—Ç–∞—Ä–∞: {e}")
    return 0

def get_dialogs_count(vk):
    try:
        return vk.messages.getConversations()['count']
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–∏–∞–ª–æ–≥–æ–≤: {e}")
    return 0

def get_unread_count(vk):
    try:
        return vk.messages.getConversations(filter='unread')['count']
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {e}")
    return 0

def get_online_friends(vk):
    try:
        return len(vk.friends.getOnline())
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥—Ä—É–∑–µ–π –æ–Ω–ª–∞–π–Ω: {e}")
    return 0

def get_last_message(vk):
    try:
        conversations = vk.messages.getConversations(count=1)
        if conversations['items']:
            return conversations['items'][0]['last_message']['text'][:20]
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    return "–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π"

def get_blacklist_count(vk):
    try:
        return vk.account.getBanned()['count']
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤ –ß–°: {e}")
    return 0

def get_followers_count(vk):
    try:
        return vk.users.getFollowers()['count']
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {e}")
    return 0


def create_status(vk, template_number):
    current_time = datetime.now().strftime("%H:%M:%S")
    current_date = datetime.now().strftime("%d.%m.%Y")
    avatar_likes = get_avatar_likes(vk)
    dialogs_count = get_dialogs_count(vk)
    unread_count = get_unread_count(vk)
    online_friends = get_online_friends(vk)
    last_message = get_last_message(vk)
    blacklist_count = get_blacklist_count(vk)
    followers_count = get_followers_count(vk)

    templates = [
        f"üìÜ {current_date} | üíå –ù–∞ –∞–≤–µ: {avatar_likes} ‚ù§ | üç∞ –í–µ—á–Ω—ã–π –û–Ω–ª–∞–π–Ω üç∞ | ‚úâ –î–∏–∞–ª–æ–≥–æ–≤ {dialogs_count} | üì® –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö {unread_count}",
        f"‚è≥ –í—Ä–µ–º—è: {current_time} | üíå –ù–∞ –∞–≤–µ: {avatar_likes} ‚ù§ | üìÜ –î–∞—Ç–∞:{current_date} |",
        f"‚Ä¢‚åõ{current_time}(üòí) | –î—Ä—É–∑–µ–π –æ–Ω–ª–∞–π–Ω‚úî: {online_friends}| –ù–∞ –∞–≤–µ: {avatar_likes}‚ù§ | üí¨–î–∏–∞–ª–æ–≥–æ–≤: {dialogs_count} | –ü–æ—Å–ª–µ–¥–Ω–∏–π üíå —Å: {last_message} | ‚õî –í —á—Å: {blacklist_count} | Day: {datetime.now().day} üò≥‚Ä¢",
        f"‚Ä¢ ‚åõ {current_time} üòÉ | –ù–∞ –∞–≤–µ: {avatar_likes} ‚ù§ | üí¨ –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {unread_count} | –ü–æ—Å–ª–µ–¥–Ω–∏–π üíå —Å: {last_message} | Day: {datetime.now().day} üòÉ | üòÉ ‚Ä¢",
        f"üî•–í–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ωüî• | –ù–∞ –∞–≤–µ: {avatar_likes} ‚ù§ | üí¨–î–∏–∞–ª–æ–≥–æ–≤: {dialogs_count} | ‚úòOnline friends: {online_friends} | ‚ö°My followers: {followers_count} ‚úî",
        f"|‚åõ|{current_time}(üòª) –ê–≤–∞—Ç–∞—Ä: {avatar_likes}‚ù§ |üìÖ| {current_date}(üòò)\n(üòò) | –û–Ω–ª–∞–π–Ω: {online_friends} –∏–∑ {vk.friends.get()['count']} | ‚õî –í —á—Å: {blacklist_count} | (üòª)"
    ]

    status = templates[template_number - 1]
    return f"{status} | Created by QIYANA"


def update_status(vk, status):
    try:
        vk.status.set(text=status)
        print(f"–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω: {status}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")


def main():
    token = '–¢–£–¢ –¢–û–ö–ï–ù'
    vk = vk_auth(token)
    if not vk:
        return

    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω —Å—Ç–∞—Ç—É—Å–∞ (1-6) –∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞:")
        for i in range(6):
            print(f"{i + 1}. –®–∞–±–ª–æ–Ω {i + 1}")

        choice = input("–í–∞—à –≤—ã–±–æ—Ä: ")
        if choice == '0':
            print("–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")
            break

        try:
            template_number = int(choice)
            if 1 <= template_number <= 6:
                status = create_status(vk, template_number)
                update_status(vk, status)
                print(f"–°—Ç–∞—Ç—É—Å –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")

                try:
                    while True:
                        time.sleep(60)
                        status = create_status(vk, template_number)
                        update_status(vk, status)
                except KeyboardInterrupt:
                    print("\n–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6.")
        except ValueError:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")


if __name__ == "__main__":
    main()
